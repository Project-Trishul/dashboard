import BreadCrumb from "@/components/breadcrumb";
import { columns } from "@/components/tables/employee-tables/columns";
import { EmployeeTable } from "@/components/tables/employee-tables/employee-table";
import { buttonVariants } from "@/components/ui/button";
import { Heading } from "@/components/ui/heading";
import { Separator } from "@/components/ui/separator";
import { Employee } from "@/constants/data";
import { cn } from "@/lib/utils";
import { Download, Plus } from "lucide-react";
import Link from "next/link";

const breadcrumbItems = [{ title: "Reports", link: "/dashboard/reports" }];

type paramsProps = {
  searchParams: {
    [key: string]: string | string[] | undefined;
  };
};

export default async function page({ searchParams }: paramsProps) {
  const page = Number(searchParams.page) || 1;
  const pageLimit = Number(searchParams.limit) || 10;
  const country = searchParams.search || null;
  const offset = (page - 1) * pageLimit;

  const res = await fetch(
    `https://api.slingacademy.com/v1/sample-data/users?offset=${offset}&limit=${pageLimit}` +
      (country ? `&search=${country}` : ""),
  );
  const reportsRes = await res.json();
  let reportRes2 = {
    success: true,
    message: "Sample data for testing and learning purposes",
    total_users: 6,
    offset: 0,
    limit: 10,
    users: [
      {
        domain: "amazon.in",
        status: "Active",
        report_link: "https://lightheads.co/amazon-report",
        dark_pattern: "15%",
        user_count: 99,
      },
      {
        domain: "flipkart.in",
        status: "Active",
        report_link: "https://lightheads.co/flipkart-report",
        dark_pattern: "13%",
        user_count: 98,
      },
      {
        domain: "meesho.com",
        status: "Active",
        report_link: "https://lightheads.co/meesho-report",
        dark_pattern: "18%",
        user_count: 97,
      },
      {
        domain: "snapdeal.com",
        status: "Active",
        report_link: "https://lightheads.co/snapdeal-report",
        dark_pattern: "17%",
        user_count: 96,
      },
      {
        domain: "myntra.com",
        status: "Active",
        report_link: "https://lightheads.co/myntra-report",
        dark_pattern: "16%",
        user_count: 95,
      },
      {
        domain: "jabong.com",
        status: "Active",
        report_link: "https://lightheads.co/jabong-report",
        dark_pattern: "14%",
        user_count: 94,
      },
    ],
  };
  const totalReports = reportRes2.total_users; //1000
  const pageCount = Math.ceil(totalReports / pageLimit);
  const employee = reportRes2.users;
  return (
    <>
      <div className="flex-1 space-y-4  p-4 md:p-8 pt-6">
        <BreadCrumb items={breadcrumbItems} />

        <div className="flex items-start justify-between">
          <Heading
            title={`Reports (${totalReports})`}
            description="Manage reports generated by models."
          />

          <Link
            href={"/dashboard/employee/new"}
            className={cn(buttonVariants({ variant: "default" }))}
          >
            <Download className="mr-2 h-4 w-4" /> Download CSV
          </Link>
        </div>
        <Separator />

        <EmployeeTable
          searchKey="domain"
          pageNo={page}
          columns={columns}
          totalUsers={totalReports}
          data={employee}
          pageCount={pageCount}
        />
      </div>
    </>
  );
}
